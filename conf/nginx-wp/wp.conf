server {
    listen 80;
    server_name MyAwsomeDomain.com;

    root /var/www/html;
    index index.php;

    # access_log /var/log/nginx/wp-access.log;
    error_log /var/log/nginx/wp-error.log;

 
    # Set the limit to 2 requests per second
    limit_req_zone $binary_remote_addr zone=WPRATELIMIT:10m rate=2r/s;
    location ~ \wp-login.php$ {
        limit_req zone=WPRATELIMIT;
    }

    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass wp:9000;
        include /etc/nginx/fastcgi.conf;
    }

    location ~* .(jpg|jpeg|png|gif|ico|css|js)$ {
        expires 365d;
    }
    
    # Prevent Hot Linking
    location ~* \.(gif|png|jpe?g)$ {
        valid_referers none blocked server_names ~\.google\. ~\.bing\. ~\.yahoo\. ~\.facebook\. ~\.slimmersmarter.com;
        if ($invalid_referer) {
            return 403;
        }
    }
    
    # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~ /\. {
        deny all;
    }
 
    # Deny access to any files with a .php extension in the uploads directory
    # Works in sub-directory installs and also in multisite network
    # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
     }   

    # Reduce Spam Entries
    set $comment_flagged 0;
    set $comment_request_method 0;
    set $comment_request_uri 0;
    set $comment_referrer 1;
 
    if ($request_method ~ "POST") {
       set $comment_request_method 1;
    }
 
    if ($request_uri ~ "/wp-comments-post\.php$") {
       set $comment_request_method 1;
    }
 
    if ($http_referer !~ "^https?://(([^/]+\.)?site\.com|jetpack\.wordpress\.com/jetpack-comment)(/|$)") {
       set $comment_referrer 0;
    }
 
   set $comment_flagged "${comment_request_method}${comment_request_uri}${comment_referrer}";
   if ($comment_flagged = "111") {
       return 403;
}
}
